
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000384  00000418  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000384  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  0000041e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000450  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007fe  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070b  00000000  00000000  00000caa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002aa  00000000  00000000  000013b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001660  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c5  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000010c  00000000  00000000  00001a49  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001b55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 30       	cpi	r26, 0x0A	; 10
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 c0 01 	jmp	0x380	; 0x380 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

int main();


int main() {
	DDRC = 0xFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	87 b9       	out	0x07, r24	; 7

	while (1) {
		uint8_t* led_pins = malloc(4*1);
		for (uint8_t i = 0; i < 4; i++) {
			led_pins[i] = i;
  aa:	ff 24       	eor	r15, r15
  ac:	f3 94       	inc	r15
  ae:	02 e0       	ldi	r16, 0x02	; 2
  b0:	13 e0       	ldi	r17, 0x03	; 3
		}

		for (uint8_t i = 0; i < 4; i++) {
			PORTC |= (1 << led_pins[i]);
  b2:	c1 e0       	ldi	r28, 0x01	; 1
  b4:	d0 e0       	ldi	r29, 0x00	; 0

int main() {
	DDRC = 0xFF;

	while (1) {
		uint8_t* led_pins = malloc(4*1);
  b6:	84 e0       	ldi	r24, 0x04	; 4
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 9f 00 	call	0x13e	; 0x13e <malloc>
  be:	6c 01       	movw	r12, r24
		for (uint8_t i = 0; i < 4; i++) {
			led_pins[i] = i;
  c0:	dc 01       	movw	r26, r24
  c2:	1c 92       	st	X, r1
  c4:	11 96       	adiw	r26, 0x01	; 1
  c6:	fc 92       	st	X, r15
  c8:	11 97       	sbiw	r26, 0x01	; 1
  ca:	12 96       	adiw	r26, 0x02	; 2
  cc:	0c 93       	st	X, r16
  ce:	12 97       	sbiw	r26, 0x02	; 2
  d0:	13 96       	adiw	r26, 0x03	; 3
  d2:	1c 93       	st	X, r17
  d4:	fc 01       	movw	r30, r24
  d6:	bc 01       	movw	r22, r24
  d8:	6c 5f       	subi	r22, 0xFC	; 252
  da:	7f 4f       	sbci	r23, 0xFF	; 255
		}

		for (uint8_t i = 0; i < 4; i++) {
			PORTC |= (1 << led_pins[i]);
  dc:	48 b1       	in	r20, 0x08	; 8
  de:	cf 01       	movw	r24, r30
  e0:	9e 01       	movw	r18, r28
  e2:	01 90       	ld	r0, Z+
  e4:	02 c0       	rjmp	.+4      	; 0xea <main+0x44>
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <main+0x40>
  ee:	24 2b       	or	r18, r20
  f0:	28 b9       	out	0x08, r18	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f2:	bf e9       	ldi	r27, 0x9F	; 159
  f4:	26 e8       	ldi	r18, 0x86	; 134
  f6:	31 e0       	ldi	r19, 0x01	; 1
  f8:	b1 50       	subi	r27, 0x01	; 1
  fa:	20 40       	sbci	r18, 0x00	; 0
  fc:	30 40       	sbci	r19, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x52>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x5c>
 102:	00 00       	nop
			_delay_ms(500);

			PORTC &= ~(1 << led_pins[i]);
 104:	28 b1       	in	r18, 0x08	; 8
 106:	ae 01       	movw	r20, r28
 108:	dc 01       	movw	r26, r24
 10a:	0c 90       	ld	r0, X
 10c:	02 c0       	rjmp	.+4      	; 0x112 <main+0x6c>
 10e:	44 0f       	add	r20, r20
 110:	55 1f       	adc	r21, r21
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <main+0x68>
 116:	94 2f       	mov	r25, r20
 118:	90 95       	com	r25
 11a:	92 23       	and	r25, r18
 11c:	98 b9       	out	0x08, r25	; 8
 11e:	bf e9       	ldi	r27, 0x9F	; 159
 120:	26 e8       	ldi	r18, 0x86	; 134
 122:	31 e0       	ldi	r19, 0x01	; 1
 124:	b1 50       	subi	r27, 0x01	; 1
 126:	20 40       	sbci	r18, 0x00	; 0
 128:	30 40       	sbci	r19, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0x7e>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x88>
 12e:	00 00       	nop
		uint8_t* led_pins = malloc(4*1);
		for (uint8_t i = 0; i < 4; i++) {
			led_pins[i] = i;
		}

		for (uint8_t i = 0; i < 4; i++) {
 130:	6e 17       	cp	r22, r30
 132:	7f 07       	cpc	r23, r31
 134:	99 f6       	brne	.-90     	; 0xdc <main+0x36>
			PORTC &= ~(1 << led_pins[i]);
			_delay_ms(500);
		}


		free(led_pins);
 136:	c6 01       	movw	r24, r12
 138:	0e 94 37 01 	call	0x26e	; 0x26e <free>

	}
 13c:	bc cf       	rjmp	.-136    	; 0xb6 <main+0x10>

0000013e <malloc>:
 13e:	0f 93       	push	r16
 140:	1f 93       	push	r17
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	82 30       	cpi	r24, 0x02	; 2
 148:	91 05       	cpc	r25, r1
 14a:	10 f4       	brcc	.+4      	; 0x150 <malloc+0x12>
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 154:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	a0 e0       	ldi	r26, 0x00	; 0
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	30 97       	sbiw	r30, 0x00	; 0
 162:	19 f1       	breq	.+70     	; 0x1aa <malloc+0x6c>
 164:	40 81       	ld	r20, Z
 166:	51 81       	ldd	r21, Z+1	; 0x01
 168:	02 81       	ldd	r16, Z+2	; 0x02
 16a:	13 81       	ldd	r17, Z+3	; 0x03
 16c:	48 17       	cp	r20, r24
 16e:	59 07       	cpc	r21, r25
 170:	c8 f0       	brcs	.+50     	; 0x1a4 <malloc+0x66>
 172:	84 17       	cp	r24, r20
 174:	95 07       	cpc	r25, r21
 176:	69 f4       	brne	.+26     	; 0x192 <malloc+0x54>
 178:	10 97       	sbiw	r26, 0x00	; 0
 17a:	31 f0       	breq	.+12     	; 0x188 <malloc+0x4a>
 17c:	12 96       	adiw	r26, 0x02	; 2
 17e:	0c 93       	st	X, r16
 180:	12 97       	sbiw	r26, 0x02	; 2
 182:	13 96       	adiw	r26, 0x03	; 3
 184:	1c 93       	st	X, r17
 186:	27 c0       	rjmp	.+78     	; 0x1d6 <malloc+0x98>
 188:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 18c:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 190:	22 c0       	rjmp	.+68     	; 0x1d6 <malloc+0x98>
 192:	21 15       	cp	r18, r1
 194:	31 05       	cpc	r19, r1
 196:	19 f0       	breq	.+6      	; 0x19e <malloc+0x60>
 198:	42 17       	cp	r20, r18
 19a:	53 07       	cpc	r21, r19
 19c:	18 f4       	brcc	.+6      	; 0x1a4 <malloc+0x66>
 19e:	9a 01       	movw	r18, r20
 1a0:	bd 01       	movw	r22, r26
 1a2:	ef 01       	movw	r28, r30
 1a4:	df 01       	movw	r26, r30
 1a6:	f8 01       	movw	r30, r16
 1a8:	db cf       	rjmp	.-74     	; 0x160 <malloc+0x22>
 1aa:	21 15       	cp	r18, r1
 1ac:	31 05       	cpc	r19, r1
 1ae:	f9 f0       	breq	.+62     	; 0x1ee <malloc+0xb0>
 1b0:	28 1b       	sub	r18, r24
 1b2:	39 0b       	sbc	r19, r25
 1b4:	24 30       	cpi	r18, 0x04	; 4
 1b6:	31 05       	cpc	r19, r1
 1b8:	80 f4       	brcc	.+32     	; 0x1da <malloc+0x9c>
 1ba:	8a 81       	ldd	r24, Y+2	; 0x02
 1bc:	9b 81       	ldd	r25, Y+3	; 0x03
 1be:	61 15       	cp	r22, r1
 1c0:	71 05       	cpc	r23, r1
 1c2:	21 f0       	breq	.+8      	; 0x1cc <malloc+0x8e>
 1c4:	fb 01       	movw	r30, r22
 1c6:	93 83       	std	Z+3, r25	; 0x03
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	04 c0       	rjmp	.+8      	; 0x1d4 <malloc+0x96>
 1cc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 1d0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 1d4:	fe 01       	movw	r30, r28
 1d6:	32 96       	adiw	r30, 0x02	; 2
 1d8:	44 c0       	rjmp	.+136    	; 0x262 <malloc+0x124>
 1da:	fe 01       	movw	r30, r28
 1dc:	e2 0f       	add	r30, r18
 1de:	f3 1f       	adc	r31, r19
 1e0:	81 93       	st	Z+, r24
 1e2:	91 93       	st	Z+, r25
 1e4:	22 50       	subi	r18, 0x02	; 2
 1e6:	31 09       	sbc	r19, r1
 1e8:	39 83       	std	Y+1, r19	; 0x01
 1ea:	28 83       	st	Y, r18
 1ec:	3a c0       	rjmp	.+116    	; 0x262 <malloc+0x124>
 1ee:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 1f2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 1f6:	23 2b       	or	r18, r19
 1f8:	41 f4       	brne	.+16     	; 0x20a <malloc+0xcc>
 1fa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 1fe:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 202:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__data_end+0x1>
 206:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__data_end>
 20a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 20e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 212:	21 15       	cp	r18, r1
 214:	31 05       	cpc	r19, r1
 216:	41 f4       	brne	.+16     	; 0x228 <malloc+0xea>
 218:	2d b7       	in	r18, 0x3d	; 61
 21a:	3e b7       	in	r19, 0x3e	; 62
 21c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 220:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 224:	24 1b       	sub	r18, r20
 226:	35 0b       	sbc	r19, r21
 228:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 22c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 230:	e2 17       	cp	r30, r18
 232:	f3 07       	cpc	r31, r19
 234:	a0 f4       	brcc	.+40     	; 0x25e <malloc+0x120>
 236:	2e 1b       	sub	r18, r30
 238:	3f 0b       	sbc	r19, r31
 23a:	28 17       	cp	r18, r24
 23c:	39 07       	cpc	r19, r25
 23e:	78 f0       	brcs	.+30     	; 0x25e <malloc+0x120>
 240:	ac 01       	movw	r20, r24
 242:	4e 5f       	subi	r20, 0xFE	; 254
 244:	5f 4f       	sbci	r21, 0xFF	; 255
 246:	24 17       	cp	r18, r20
 248:	35 07       	cpc	r19, r21
 24a:	48 f0       	brcs	.+18     	; 0x25e <malloc+0x120>
 24c:	4e 0f       	add	r20, r30
 24e:	5f 1f       	adc	r21, r31
 250:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__data_end+0x1>
 254:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__data_end>
 258:	81 93       	st	Z+, r24
 25a:	91 93       	st	Z+, r25
 25c:	02 c0       	rjmp	.+4      	; 0x262 <malloc+0x124>
 25e:	e0 e0       	ldi	r30, 0x00	; 0
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	cf 01       	movw	r24, r30
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	08 95       	ret

0000026e <free>:
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	00 97       	sbiw	r24, 0x00	; 0
 274:	09 f4       	brne	.+2      	; 0x278 <free+0xa>
 276:	81 c0       	rjmp	.+258    	; 0x37a <free+0x10c>
 278:	fc 01       	movw	r30, r24
 27a:	32 97       	sbiw	r30, 0x02	; 2
 27c:	13 82       	std	Z+3, r1	; 0x03
 27e:	12 82       	std	Z+2, r1	; 0x02
 280:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 284:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 288:	10 97       	sbiw	r26, 0x00	; 0
 28a:	81 f4       	brne	.+32     	; 0x2ac <free+0x3e>
 28c:	20 81       	ld	r18, Z
 28e:	31 81       	ldd	r19, Z+1	; 0x01
 290:	82 0f       	add	r24, r18
 292:	93 1f       	adc	r25, r19
 294:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 298:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 29c:	28 17       	cp	r18, r24
 29e:	39 07       	cpc	r19, r25
 2a0:	51 f5       	brne	.+84     	; 0x2f6 <free+0x88>
 2a2:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 2a6:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 2aa:	67 c0       	rjmp	.+206    	; 0x37a <free+0x10c>
 2ac:	ed 01       	movw	r28, r26
 2ae:	20 e0       	ldi	r18, 0x00	; 0
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	ce 17       	cp	r28, r30
 2b4:	df 07       	cpc	r29, r31
 2b6:	40 f4       	brcc	.+16     	; 0x2c8 <free+0x5a>
 2b8:	4a 81       	ldd	r20, Y+2	; 0x02
 2ba:	5b 81       	ldd	r21, Y+3	; 0x03
 2bc:	9e 01       	movw	r18, r28
 2be:	41 15       	cp	r20, r1
 2c0:	51 05       	cpc	r21, r1
 2c2:	f1 f0       	breq	.+60     	; 0x300 <free+0x92>
 2c4:	ea 01       	movw	r28, r20
 2c6:	f5 cf       	rjmp	.-22     	; 0x2b2 <free+0x44>
 2c8:	d3 83       	std	Z+3, r29	; 0x03
 2ca:	c2 83       	std	Z+2, r28	; 0x02
 2cc:	40 81       	ld	r20, Z
 2ce:	51 81       	ldd	r21, Z+1	; 0x01
 2d0:	84 0f       	add	r24, r20
 2d2:	95 1f       	adc	r25, r21
 2d4:	c8 17       	cp	r28, r24
 2d6:	d9 07       	cpc	r29, r25
 2d8:	59 f4       	brne	.+22     	; 0x2f0 <free+0x82>
 2da:	88 81       	ld	r24, Y
 2dc:	99 81       	ldd	r25, Y+1	; 0x01
 2de:	84 0f       	add	r24, r20
 2e0:	95 1f       	adc	r25, r21
 2e2:	02 96       	adiw	r24, 0x02	; 2
 2e4:	91 83       	std	Z+1, r25	; 0x01
 2e6:	80 83       	st	Z, r24
 2e8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ea:	9b 81       	ldd	r25, Y+3	; 0x03
 2ec:	93 83       	std	Z+3, r25	; 0x03
 2ee:	82 83       	std	Z+2, r24	; 0x02
 2f0:	21 15       	cp	r18, r1
 2f2:	31 05       	cpc	r19, r1
 2f4:	29 f4       	brne	.+10     	; 0x300 <free+0x92>
 2f6:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 2fa:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 2fe:	3d c0       	rjmp	.+122    	; 0x37a <free+0x10c>
 300:	e9 01       	movw	r28, r18
 302:	fb 83       	std	Y+3, r31	; 0x03
 304:	ea 83       	std	Y+2, r30	; 0x02
 306:	49 91       	ld	r20, Y+
 308:	59 91       	ld	r21, Y+
 30a:	c4 0f       	add	r28, r20
 30c:	d5 1f       	adc	r29, r21
 30e:	ec 17       	cp	r30, r28
 310:	fd 07       	cpc	r31, r29
 312:	61 f4       	brne	.+24     	; 0x32c <free+0xbe>
 314:	80 81       	ld	r24, Z
 316:	91 81       	ldd	r25, Z+1	; 0x01
 318:	84 0f       	add	r24, r20
 31a:	95 1f       	adc	r25, r21
 31c:	02 96       	adiw	r24, 0x02	; 2
 31e:	e9 01       	movw	r28, r18
 320:	99 83       	std	Y+1, r25	; 0x01
 322:	88 83       	st	Y, r24
 324:	82 81       	ldd	r24, Z+2	; 0x02
 326:	93 81       	ldd	r25, Z+3	; 0x03
 328:	9b 83       	std	Y+3, r25	; 0x03
 32a:	8a 83       	std	Y+2, r24	; 0x02
 32c:	e0 e0       	ldi	r30, 0x00	; 0
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	12 96       	adiw	r26, 0x02	; 2
 332:	8d 91       	ld	r24, X+
 334:	9c 91       	ld	r25, X
 336:	13 97       	sbiw	r26, 0x03	; 3
 338:	00 97       	sbiw	r24, 0x00	; 0
 33a:	19 f0       	breq	.+6      	; 0x342 <free+0xd4>
 33c:	fd 01       	movw	r30, r26
 33e:	dc 01       	movw	r26, r24
 340:	f7 cf       	rjmp	.-18     	; 0x330 <free+0xc2>
 342:	8d 91       	ld	r24, X+
 344:	9c 91       	ld	r25, X
 346:	11 97       	sbiw	r26, 0x01	; 1
 348:	9d 01       	movw	r18, r26
 34a:	2e 5f       	subi	r18, 0xFE	; 254
 34c:	3f 4f       	sbci	r19, 0xFF	; 255
 34e:	82 0f       	add	r24, r18
 350:	93 1f       	adc	r25, r19
 352:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 356:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 35a:	28 17       	cp	r18, r24
 35c:	39 07       	cpc	r19, r25
 35e:	69 f4       	brne	.+26     	; 0x37a <free+0x10c>
 360:	30 97       	sbiw	r30, 0x00	; 0
 362:	29 f4       	brne	.+10     	; 0x36e <free+0x100>
 364:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 368:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 36c:	02 c0       	rjmp	.+4      	; 0x372 <free+0x104>
 36e:	13 82       	std	Z+3, r1	; 0x03
 370:	12 82       	std	Z+2, r1	; 0x02
 372:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x1>
 376:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end>
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	08 95       	ret

00000380 <_exit>:
 380:	f8 94       	cli

00000382 <__stop_program>:
 382:	ff cf       	rjmp	.-2      	; 0x382 <__stop_program>
